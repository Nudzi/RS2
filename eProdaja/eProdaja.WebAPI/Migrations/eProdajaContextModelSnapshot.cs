// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eProdaja.WebAPI.Database;

namespace eProdaja.WebAPI.Migrations
{
    [DbContext(typeof(eProdajaContext))]
    partial class eProdajaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eProdaja.WebAPI.Database.Dobavljaci", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DobavljacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasMaxLength(25);

                    b.Property<string>("KontaktOsoba")
                        .HasMaxLength(100);

                    b.Property<string>("Napomena")
                        .HasMaxLength(500);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Web")
                        .HasMaxLength(100);

                    b.Property<string>("ZiroRacuni")
                        .HasMaxLength(255);

                    b.HasKey("DobavljacId");

                    b.ToTable("Dobavljaci");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Izlazi", b =>
                {
                    b.Property<int>("IzlazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IzlazID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnName("IznosBezPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IznosSaPdv")
                        .HasColumnName("IznosSaPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnName("NarudzbaID");

                    b.Property<int>("SkladisteId")
                        .HasColumnName("SkladisteID");

                    b.Property<bool>("Zakljucen");

                    b.HasKey("IzlazId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Izlazi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.IzlazStavke", b =>
                {
                    b.Property<int>("IzlazStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IzlazStavkaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("IzlazId")
                        .HasColumnName("IzlazID");

                    b.Property<int>("Kolicina");

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("ProizvodId")
                        .HasColumnName("ProizvodID");

                    b.HasKey("IzlazStavkaId");

                    b.HasIndex("IzlazId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("IzlazStavke");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.JediniceMjere", b =>
                {
                    b.Property<int>("JedinicaMjereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JedinicaMjereID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("JedinicaMjereId");

                    b.ToTable("JediniceMjere");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("CS_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("CS_KorisnickoIme");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Kupci", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KupacID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Status");

                    b.HasKey("KupacId");

                    b.ToTable("Kupci");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.NarudzbaStavke", b =>
                {
                    b.Property<int>("NarudzbaStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NarudzbaStavkaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaId")
                        .HasColumnName("NarudzbaID");

                    b.Property<int>("ProizvodId")
                        .HasColumnName("ProizvodID");

                    b.HasKey("NarudzbaStavkaId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Narudzbe", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NarudzbaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNarudzbe")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<bool?>("Otkazano");

                    b.Property<bool>("Status");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KupacId");

                    b.ToTable("Narudzbe");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID");

                    b.Property<int>("Ocjena");

                    b.Property<int>("ProizvodId")
                        .HasColumnName("ProizvodID");

                    b.HasKey("OcjenaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Proizvodi", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProizvodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("JedinicaMjereId")
                        .HasColumnName("JedinicaMjereID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("VrstaId")
                        .HasColumnName("VrstaID");

                    b.HasKey("ProizvodId");

                    b.HasIndex("JedinicaMjereId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Skladista", b =>
                {
                    b.Property<int>("SkladisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SkladisteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(150);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(500);

                    b.HasKey("SkladisteId");

                    b.ToTable("Skladista");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Ulazi", b =>
                {
                    b.Property<int>("UlazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlazID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojFakture")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("DobavljacId")
                        .HasColumnName("DobavljacID");

                    b.Property<decimal>("IznosRacuna")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Napomena")
                        .HasMaxLength(500);

                    b.Property<decimal>("Pdv")
                        .HasColumnName("PDV")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int>("SkladisteId")
                        .HasColumnName("SkladisteID");

                    b.HasKey("UlazId");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Ulazi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.UlazStavke", b =>
                {
                    b.Property<int>("UlazStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlazStavkaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Kolicina");

                    b.Property<int>("ProizvodId")
                        .HasColumnName("ProizvodID");

                    b.Property<int>("UlazId")
                        .HasColumnName("UlazID");

                    b.HasKey("UlazStavkaId");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("UlazId");

                    b.ToTable("UlazStavke");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.VrsteProizvoda", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VrstaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("VrstaId");

                    b.ToTable("VrsteProizvoda");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Izlazi", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Izlazi")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Izlazi_Korisnici");

                    b.HasOne("eProdaja.WebAPI.Database.Narudzbe", "Narudzba")
                        .WithMany("Izlazi")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK_Izlazi_Narudzbe");

                    b.HasOne("eProdaja.WebAPI.Database.Skladista", "Skladiste")
                        .WithMany("Izlazi")
                        .HasForeignKey("SkladisteId")
                        .HasConstraintName("FK_Izlazi_Skladista");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.IzlazStavke", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Izlazi", "Izlaz")
                        .WithMany("IzlazStavke")
                        .HasForeignKey("IzlazId")
                        .HasConstraintName("FK_IzlazStavke_Izlazi");

                    b.HasOne("eProdaja.WebAPI.Database.Proizvodi", "Proizvod")
                        .WithMany("IzlazStavke")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_IzlazStavke_Proizvodi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici");

                    b.HasOne("eProdaja.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.NarudzbaStavke", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Narudzbe", "Narudzba")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK_NarudzbaStavke_Narudzbe");

                    b.HasOne("eProdaja.WebAPI.Database.Proizvodi", "Proizvod")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_NarudzbaStavke_Proizvodi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Narudzbe", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Narudzbe")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Narudzbe_Kupci");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Ocjene")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Ocjene_Kupci");

                    b.HasOne("eProdaja.WebAPI.Database.Proizvodi", "Proizvod")
                        .WithMany("Ocjene")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_Ocjene_Proizvodi");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Proizvodi", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.JediniceMjere", "JedinicaMjere")
                        .WithMany("Proizvodi")
                        .HasForeignKey("JedinicaMjereId")
                        .HasConstraintName("FK_Proizvodi_JediniceMjere");

                    b.HasOne("eProdaja.WebAPI.Database.VrsteProizvoda", "Vrsta")
                        .WithMany("Proizvodi")
                        .HasForeignKey("VrstaId")
                        .HasConstraintName("FK_Proizvodi_VrsteProizvoda");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.Ulazi", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Dobavljaci", "Dobavljac")
                        .WithMany("Ulazi")
                        .HasForeignKey("DobavljacId")
                        .HasConstraintName("FK_Ulazi_Dobavljaci");

                    b.HasOne("eProdaja.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Ulazi")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Ulazi_Korisnici");

                    b.HasOne("eProdaja.WebAPI.Database.Skladista", "Skladiste")
                        .WithMany("Ulazi")
                        .HasForeignKey("SkladisteId")
                        .HasConstraintName("FK_Ulazi_Skladista");
                });

            modelBuilder.Entity("eProdaja.WebAPI.Database.UlazStavke", b =>
                {
                    b.HasOne("eProdaja.WebAPI.Database.Proizvodi", "Proizvod")
                        .WithMany("UlazStavke")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("FK_UlazStavke_Proizvodi");

                    b.HasOne("eProdaja.WebAPI.Database.Ulazi", "Ulaz")
                        .WithMany("UlazStavke")
                        .HasForeignKey("UlazId")
                        .HasConstraintName("FK_UlazStavke_Ulazi");
                });
#pragma warning restore 612, 618
        }
    }
}
